const express = require('express');
require('./models/index');
require('./controller/index');
const AWS = require('aws-sdk');
var bodyParser = require('body-parser');
var path = require("path");
require('dotenv').config();
const app = express();
app.use(express.json());
app.use(bodyParser.json({ limit: '5mb' }));
app.use(bodyParser.urlencoded({ limit: '5mb', extended: true }));
const passport = require('passport');
var userProfile;
require('./db_config/config.js');
const session = require('express-session');
var fs = require('fs');
app.set('view engine', 'ejs');
app.use('/', require('./routes/index.js'));

const uploadImage = async (req, res) => {
  try {
    console.log(req.body.img);
    const filePath = './images/' + Date.now() + '.png';
    const imgdata = req.body.img;
    const base64Data = imgdata.replace(/^data:([A-Za-z-+/]+);base64,/, '');
    fs.writeFileSync(filePath, base64Data, { encoding: 'base64' });

    const s3 = new AWS.S3({
      accessKeyId: process.env.AWS_ACCESS_KEY_ID, // Loaded from .env
      secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY, // Loaded from .env
    });

    const params = {
      Bucket: process.env.AWS_BUCKET_NAME, // Add this to .env
      Key: filePath,
      ACL: 'public-read',
      Body: fs.createReadStream(filePath),
    };

    s3.upload(params, function (err, data) {
      if (err) {
        console.log("Error: ", err);
      } else {
        console.log(`File uploaded successfully. ${data.Location}`);
        return res.status(201).json({ location: data.Location });
      }
    });
  } catch (e) {
    res.json({ e });
  }
};

app.post('/upload/image', function (req, res) {
  uploadImage(req, res);
});

app.use(session({
  resave: false,
  saveUninitialized: true,
  secret: 'ADadasda25324523452345aewe54253'
}));

app.listen(process.env.PORT, function (err) {
  if (err) console.log("Error in server setup");
  console.log("Server listening on process.env.PORT", process.env.PORT);
});